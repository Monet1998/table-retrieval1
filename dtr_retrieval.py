# -*- coding: utf-8 -*-
"""dtr_retrieval

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IYEFF83xBSMqj5mdLjHxjboINZ2FilVk
"""

from biencoder import BiEncoder, cosine_similarity
from data_preprocessing import preprocess_table_for_dtr
from config import TAPAS_MODEL_PATH

class DTRTableRetrieval:
    def __init__(self):
        self.biencoder = BiEncoder(TAPAS_MODEL_PATH, TAPAS_MODEL_PATH)

    def retrieve(self, query, tables, top_k=5):
        query_embedding = self.biencoder.encode_queries([query])[0]
        preprocessed_tables = [preprocess_table_for_dtr(table) for table in tables]

        context_embeddings = self.biencoder.encode_contexts(preprocessed_tables)

        similarities = cosine_similarity(query_embedding.unsqueeze(0), context_embeddings).squeeze(0)
        top_indices = similarities.argsort(descending=True)[:top_k]

        return [tables[i] for i in top_indices], similarities[top_indices]