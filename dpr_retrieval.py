# -*- coding: utf-8 -*-
"""# dpr_retrieval

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IYEFF83xBSMqj5mdLjHxjboINZ2FilVk
"""

from biencoder import BiEncoder, cosine_similarity
from data_preprocessing import table_to_text, preprocess_text
from config import DPR_MODEL_PATH, DPR_CONTEXT_MODEL_PATH

class DPRTableRetrieval:
    def __init__(self):
        self.biencoder = BiEncoder(DPR_MODEL_PATH, DPR_CONTEXT_MODEL_PATH)

    def get_all_tables_as_passages(self, tables):
        """Converts tables to passages by including headers and cell texts."""
        all_passages = {}
        for table_id, table in enumerate(tables):
            headers = ' '.join(preprocess_text(header) for header in table['headers'])
            cells_text = ' '.join([' '.join(preprocess_text(str(cell)) for cell in row.values()) for row in table['rows']])
            full_text = f"{headers} {cells_text}"
            all_passages[table_id] = full_text
        return all_passages

    def retrieve(self, query, tables, top_k=5):
        query_embedding = self.biencoder.encode_queries([query])[0]
        passages = self.get_all_tables_as_passages(tables)
        context_embeddings = self.biencoder.encode_contexts(list(passages.values()))

        similarities = cosine_similarity(query_embedding.unsqueeze(0), context_embeddings).squeeze(0)
        top_indices = similarities.argsort(descending=True)[:top_k]

        return [tables[i] for i in top_indices], similarities[top_indices]